{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workflows_Logic_app_name": {
            "defaultValue": "Logic-app",
            "type": "String"
        },
        "connections_azureblob_name": {
            "defaultValue": "azureblob",
            "type": "String"
        },
        "connections_documentdb_name": {
            "defaultValue": "documentdb",
            "type": "String"
        },
        "storageAccounts_wutrpstorage_name": {
            "defaultValue": "wutrpstorage",
            "type": "String"
        },
        "searchServices_wut_receipt_search_name": {
            "defaultValue": "wut-receipt-search",
            "type": "String"
        },
        "databaseAccounts_receipt_cosmos_name": {
            "defaultValue": "receipt-cosmos",
            "type": "String"
        },
        "accounts_wut_ocr_on_azure_fr_name": {
            "defaultValue": "wut-ocr-on-azure-fr",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.CognitiveServices/accounts",
            "apiVersion": "2017-04-18",
            "name": "[parameters('accounts_wut_ocr_on_azure_fr_name')]",
            "location": "westeurope",
            "sku": {
                "name": "F0"
            },
            "kind": "FormRecognizer",
            "identity": {
                "type": "None",
                "userAssignedIdentities": {}
            },
            "properties": {
                "customSubDomainName": "[parameters('accounts_wut_ocr_on_azure_fr_name')]",
                "privateEndpointConnections": [],
                "publicNetworkAccess": "Enabled"
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "2020-06-01-preview",
            "name": "[parameters('databaseAccounts_receipt_cosmos_name')]",
            "location": "West Europe",
            "tags": {
                "defaultExperience": "Core (SQL)",
                "hidden-cosmos-mmspecial": "",
                "CosmosAccountType": "Non-Production"
            },
            "kind": "GlobalDocumentDB",
            "identity": {
                "type": "None"
            },
            "properties": {
                "publicNetworkAccess": "Enabled",
                "enableAutomaticFailover": false,
                "enableMultipleWriteLocations": false,
                "isVirtualNetworkFilterEnabled": false,
                "virtualNetworkRules": [],
                "disableKeyBasedMetadataWriteAccess": false,
                "enableFreeTier": true,
                "enableAnalyticalStorage": false,
                "createMode": "Default",
                "databaseAccountOfferType": "Standard",
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Session",
                    "maxIntervalInSeconds": 5,
                    "maxStalenessPrefix": 100
                },
                "locations": [
                    {
                        "locationName": "West Europe",
                        "provisioningState": "Succeeded",
                        "failoverPriority": 0,
                        "isZoneRedundant": false
                    }
                ],
                "cors": [],
                "capabilities": [],
                "ipRules": [],
                "backupPolicy": {
                    "type": "Periodic",
                    "periodicModeProperties": {
                        "backupIntervalInMinutes": 240,
                        "backupRetentionIntervalInHours": 8
                    }
                }
            }
        },
        {
            "type": "Microsoft.Search/searchServices",
            "apiVersion": "2020-08-01",
            "name": "[parameters('searchServices_wut_receipt_search_name')]",
            "location": "West Europe",
            "sku": {
                "name": "free"
            },
            "properties": {
                "replicaCount": 1,
                "partitionCount": 1,
                "hostingMode": "Default",
                "publicNetworkAccess": "Enabled",
                "networkRuleSet": {
                    "ipRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2020-08-01-preview",
            "name": "[parameters('storageAccounts_wutrpstorage_name')]",
            "location": "westeurope",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_azureblob_name')]",
            "location": "westeurope",
            "kind": "V1",
            "properties": {
                "displayName": "rp blob",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/2549dd73-5e05-4496-ac25-8fc3d46c42ea/providers/Microsoft.Web/locations/westeurope/managedApis/', parameters('connections_azureblob_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_documentdb_name')]",
            "location": "westeurope",
            "kind": "V1",
            "properties": {
                "displayName": "cosmo-connection",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/2549dd73-5e05-4496-ac25-8fc3d46c42ea/providers/Microsoft.Web/locations/westeurope/managedApis/', parameters('connections_documentdb_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
            "apiVersion": "2020-06-01-preview",
            "name": "[concat(parameters('databaseAccounts_receipt_cosmos_name'), '/receiptsDB')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_receipt_cosmos_name'))]"
            ],
            "properties": {
                "resource": {
                    "id": "receiptsDB"
                },
                "options": {}
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(parameters('storageAccounts_wutrpstorage_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_wutrpstorage_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(parameters('storageAccounts_wutrpstorage_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_wutrpstorage_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "protocolSettings": {
                    "smb": {}
                },
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(parameters('storageAccounts_wutrpstorage_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_wutrpstorage_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(parameters('storageAccounts_wutrpstorage_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_wutrpstorage_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "apiVersion": "2020-06-01-preview",
            "name": "[concat(parameters('databaseAccounts_receipt_cosmos_name'), '/receiptsDB/receiptsContainer')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_receipt_cosmos_name'), 'receiptsDB')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_receipt_cosmos_name'))]"
            ],
            "properties": {
                "resource": {
                    "id": "receiptsContainer",
                    "indexingPolicy": {
                        "indexingMode": "consistent",
                        "automatic": true,
                        "includedPaths": [
                            {
                                "path": "/*"
                            }
                        ],
                        "excludedPaths": [
                            {
                                "path": "/\"_etag\"/?"
                            }
                        ]
                    },
                    "partitionKey": {
                        "paths": [
                            "/userID"
                        ],
                        "kind": "Hash"
                    },
                    "uniqueKeyPolicy": {
                        "uniqueKeys": []
                    },
                    "conflictResolutionPolicy": {
                        "mode": "LastWriterWins",
                        "conflictResolutionPath": "/_ts"
                    }
                },
                "options": {}
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_Logic_app_name')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_blob_is_added_or_modified_(properties_only)": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 1
                            },
                            "splitOn": "@triggerBody()",
                            "metadata": {
                                "JTJmcnAtY29udGFpbmVy": "/rp-container"
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/default/triggers/batch/onupdatedfile",
                                "queries": {
                                    "folderId": "JTJmcnAtY29udGFpbmVy",
                                    "maxFileCount": 10
                                }
                            }
                        }
                    },
                    "actions": {
                        "Create_blob": {
                            "runAfter": {
                                "Get_blob_content_using_path": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@body('Get_blob_content_using_path')",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "processed",
                                    "name": "@triggerBody()?['DisplayName']",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Create_or_update_document": {
                            "runAfter": {
                                "Get_a_document": [
                                    "Failed"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "filePath": "@body('Create_blob')?['Path']",
                                    "id": "@body('Create_blob')?['Id']",
                                    "receiptRead": "@variables('receiptRead')",
                                    "userID": "@variables('userID')"
                                },
                                "headers": {
                                    "x-ms-documentdb-partitionkey": "@{variables('userID')}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['documentdb']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/dbs/@{encodeURIComponent('receiptsDB')}/colls/@{encodeURIComponent('receiptsContainer')}/docs"
                            }
                        },
                        "Delete_blob": {
                            "runAfter": {
                                "Create_blob": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "delete",
                                "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent(triggerBody()?['Path']))}"
                            }
                        },
                        "Get_a_document": {
                            "runAfter": {
                                "Set_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "headers": {
                                    "x-ms-documentdb-partitionkey": "@{variables('userID')}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['documentdb']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/dbs/@{encodeURIComponent('receiptsDB')}/colls/@{encodeURIComponent('receiptsContainer')}/docs/@{encodeURIComponent(body('Create_blob')?['Id'])}"
                            }
                        },
                        "Get_blob_content_using_path": {
                            "runAfter": {
                                "Set_variable_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/default/GetFileContentByPath",
                                "queries": {
                                    "inferContentType": true,
                                    "path": "@triggerBody()?['Path']",
                                    "queryParametersSingleEncoded": true
                                }
                            }
                        },
                        "HTTP": {
                            "runAfter": {
                                "Initialize_variable_3": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "body": {
                                    "source": "https://wutrpstorage.blob.core.windows.net@{triggerBody()?['Path']}"
                                },
                                "headers": {
                                    "Content-Type": "application/json",
                                    "Ocp-Apim-Subscription-Key": "@variables('OCP-key')"
                                },
                                "method": "POST",
                                "uri": "https://wut-ocr-on-azure-fr.cognitiveservices.azure.com/formrecognizer/v2.1-preview.2/prebuilt/receipt/analyze"
                            }
                        },
                        "Initialize_variable": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "userID",
                                        "type": "string",
                                        "value": "NOT_SET"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_2": {
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "receiptRead",
                                        "type": "object",
                                        "value": {}
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_3": {
                            "runAfter": {
                                "Initialize_variable_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "OCP-key",
                                        "type": "string",
                                        "value": ""
                                    }
                                ]
                            }
                        },
                        "Replace_a_document": {
                            "runAfter": {
                                "Get_a_document": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "filePath": "@body('Create_blob')?['Path']",
                                    "id": "@body('Create_blob')?['Id']",
                                    "receiptRead": "@variables('receiptRead')",
                                    "userID": "@variables('userID')"
                                },
                                "headers": {
                                    "x-ms-documentdb-partitionkey": "@{variables('userID')}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['documentdb']['connectionId']"
                                    }
                                },
                                "method": "put",
                                "path": "/dbs/@{encodeURIComponent('receiptsDB')}/colls/@{encodeURIComponent('receiptsContainer')}/docs/@{encodeURIComponent(body('Create_blob')?['Id'])}"
                            }
                        },
                        "Set_variable": {
                            "runAfter": {
                                "Delete_blob": [
                                    "Succeeded"
                                ]
                            },
                            "type": "SetVariable",
                            "inputs": {
                                "name": "userID",
                                "value": "@{split(body('Create_blob')?['DisplayName'],'_')[sub(length(split(body('Create_blob')?['DisplayName'],'_')),2)]}"
                            }
                        },
                        "Set_variable_2": {
                            "runAfter": {
                                "Until": [
                                    "Succeeded"
                                ]
                            },
                            "type": "SetVariable",
                            "inputs": {
                                "name": "receiptRead",
                                "value": "@body('HTTP_2')"
                            }
                        },
                        "Terminate": {
                            "runAfter": {
                                "HTTP": [
                                    "Failed"
                                ]
                            },
                            "type": "Terminate",
                            "inputs": {
                                "runError": {
                                    "code": "500",
                                    "message": "Unexpected form recognizer error"
                                },
                                "runStatus": "Failed"
                            }
                        },
                        "Terminate_2": {
                            "runAfter": {
                                "Until": [
                                    "Failed"
                                ]
                            },
                            "type": "Terminate",
                            "inputs": {
                                "runError": {
                                    "code": "500",
                                    "message": "Failed to read the receipt"
                                },
                                "runStatus": "Failed"
                            }
                        },
                        "Until": {
                            "actions": {
                                "Compose": {
                                    "runAfter": {
                                        "HTTP_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": "@body('HTTP_2')['status']"
                                },
                                "HTTP_2": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "headers": {
                                            "Ocp-Apim-Subscription-Key": "@variables('OCP-key')"
                                        },
                                        "method": "GET",
                                        "uri": "@{outputs('HTTP')['headers']['Operation-Location']}"
                                    }
                                }
                            },
                            "runAfter": {
                                "HTTP": [
                                    "Succeeded"
                                ]
                            },
                            "expression": "@equals(outputs('Compose'), 'succeeded')",
                            "limit": {
                                "count": 60,
                                "timeout": "PT1H"
                            },
                            "type": "Until"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_name'))]",
                                "connectionName": "azureblob",
                                "id": "/subscriptions/2549dd73-5e05-4496-ac25-8fc3d46c42ea/providers/Microsoft.Web/locations/westeurope/managedApis/azureblob"
                            },
                            "documentdb": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_documentdb_name'))]",
                                "connectionName": "documentdb",
                                "id": "/subscriptions/2549dd73-5e05-4496-ac25-8fc3d46c42ea/providers/Microsoft.Web/locations/westeurope/managedApis/documentdb"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(parameters('storageAccounts_wutrpstorage_name'), '/default/processed')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_wutrpstorage_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_wutrpstorage_name'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(parameters('storageAccounts_wutrpstorage_name'), '/default/rp-container')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_wutrpstorage_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_wutrpstorage_name'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "Blob"
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/throughputSettings",
            "apiVersion": "2020-06-01-preview",
            "name": "[concat(parameters('databaseAccounts_receipt_cosmos_name'), '/receiptsDB/receiptsContainer/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers', parameters('databaseAccounts_receipt_cosmos_name'), 'receiptsDB', 'receiptsContainer')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_receipt_cosmos_name'), 'receiptsDB')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_receipt_cosmos_name'))]"
            ],
            "properties": {
                "resource": {
                    "throughput": 400
                }
            }
        }
    ]
}